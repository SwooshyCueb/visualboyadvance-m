Priority TODOs:
Destructors for classes
Assignment operators, copy constructors, and so on for classes
Provide proper access methods for class variables which should be private or protected
Allow setting texture size explicitly
actually implement the error handling you worked so hard on, dummy
Scale should be float everywhere possible
vbaSize needs operator overrides for float arithmetic
Move shader attribute/uniform handling into stage class
Method for setting glsl precompiler directives
Make awful code less awful
OSD (Freetype or stb_truetype?)
slim down error handling for non-debug builds
Per-stage user-configurable options
Allow separate source files for vertex and fragment shader components in the same shader object
Port more upscalers to glsl
One pipeline for each graphics "layer"
Better/more comments
Figure out why audio only works after restarting emulation
Come up with a better name than "swooshboy"


Potential TODOs:
Use glib for data structures?
Look into individual compiled shader re-use?


Distant goals:
EGL stuff?
SDL for audio output?
SDL for video output?
GL UI (nuklear?)
100% GLES 2.0 compliance
Steam Controller API?
Steam Link port
Update checker?
